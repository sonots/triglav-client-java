/**
 * Triglav API
 * Triglav API Reference
 *
 * OpenAPI spec version: 1.0.0
 * Contact: triglav_admin_my@dena.jp
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.triglav.client.api;

import io.triglav.client.ApiException;
import io.triglav.client.User;
import io.triglav.client.UserInput;
import io.triglav.client.ErrorModel;
import io.triglav.client.UserEach;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    
    /**
     * 
     *
     * Creates a new user in the store
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        UserInput user = null;
        // User response = api.createUser(user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Deletes single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        Long id = null;
        // api.deleteUser(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns a single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        Long id = null;
        // User response = api.getUser(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns all users from the system that the user has access to
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsersTest() throws ApiException {
        // List<UserEach> response = api.listUsers();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Updates a single user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        Long id = null;
        UserInput user = null;
        // User response = api.updateUser(id, user);

        // TODO: test validations
    }
    
}
