/**
 * Triglav
 * Triglav API Reference.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.triglav.client.api;

import io.triglav.client.ApiException;
import io.triglav.client.Resource;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResourcesApi
 */
public class ResourcesApiTest {

    private final ResourcesApi api = new ResourcesApi();

    
    /**
     * Creates a Resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiV1ResourcesCreateTest() throws ApiException {
        String uri = null;
        String description = null;
        Integer clusterId = null;
        Boolean consumable = null;
        Boolean notifiable = null;
        // api.apiV1ResourcesCreate(uri, description, clusterId, consumable, notifiable);

        // TODO: test validations
    }
    
    /**
     * Deletes an existing Resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiV1ResourcesDestroyTest() throws ApiException {
        String idOrUri = null;
        // api.apiV1ResourcesDestroy(idOrUri);

        // TODO: test validations
    }
    
    /**
     * Fetches resources
     *
     * Query and fetch resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiV1ResourcesIndexTest() throws ApiException {
        String clusterId = null;
        Boolean consumable = null;
        Boolean notifiable = null;
        // api.apiV1ResourcesIndex(clusterId, consumable, notifiable);

        // TODO: test validations
    }
    
    /**
     * Fetches a single Resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiV1ResourcesShowTest() throws ApiException {
        String idOrUri = null;
        // Resource response = api.apiV1ResourcesShow(idOrUri);

        // TODO: test validations
    }
    
    /**
     * Updates a Resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiV1ResourcesUpdateTest() throws ApiException {
        String idOrUri = null;
        String uri = null;
        String description = null;
        Integer clusterId = null;
        Boolean consumable = null;
        Boolean notifiable = null;
        // api.apiV1ResourcesUpdate(idOrUri, uri, description, clusterId, consumable, notifiable);

        // TODO: test validations
    }
    
}
